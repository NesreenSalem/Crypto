[{"C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\Html\\crypto\\src\\index.js":"1","C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\Html\\crypto\\src\\App.js":"2","C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\Html\\crypto\\src\\Routes\\Home.js":"3","C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\Html\\crypto\\src\\Routes\\CoinPage.js":"4","C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\Html\\crypto\\src\\Components\\Coin.js":"5"},{"size":197,"mtime":1654570249097,"results":"6","hashOfConfig":"7"},{"size":610,"mtime":1654629718111,"results":"8","hashOfConfig":"7"},{"size":2158,"mtime":1654569793095,"results":"9","hashOfConfig":"7"},{"size":2906,"mtime":1654567942934,"results":"10","hashOfConfig":"7"},{"size":1197,"mtime":1654629826653,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"i8mwuz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\Html\\crypto\\src\\index.js",[],["25","26"],"C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\Html\\crypto\\src\\App.js",[],"C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\Html\\crypto\\src\\Routes\\Home.js",["27","28"],"import { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport Axios from \"axios\";\r\nimport Coin from '..//Components/Coin'\r\nimport Refresh from \"../Images/refresh.png\";\r\n\r\nfunction Home(){\r\n    const[coins,setCoins]=useState([]);\r\n    const [searchItem ,setSearchItem]=useState(\"\");\r\n    const[isLoading,setIsLoading]=useState(false);\r\n\r\n   useEffect(()=>{\r\n       refreshPage();\r\n   },[]);\r\n   const filterCoins=coins.filter((coin) =>{\r\n       coin.name.toLowerCase().include(searchItem.toLowerCase());\r\n   });\r\n\r\n   const handleSearch= (event)=>{\r\n       setSearchItem(event.target.value);\r\n   }\r\n   const refreshPage=() =>{\r\n      setIsLoading(true);\r\n      Axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\").then((response) =>{\r\n          console.log(response.data);\r\n          setIsLoading(false);\r\n          setCoins(response.data);\r\n      })\r\n   };\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"App\">\r\n             <div className=\"headerContainer\">\r\n             <div className=\"buttonContainer\">\r\n                <input\r\n            placeholder=\"Search for a Coin\"\r\n            type=\"text\"\r\n            onChange={handleSearch}\r\n                  />\r\n              <img onClick={refreshPage} \r\n              src={Refresh}></img>\r\n             </div>\r\n             </div>\r\n\r\n             <div className=\"coinContainer\">\r\n                {isLoading && <h1 className=\"loadingMsg\">Data Loading ...</h1>}\r\n                {filterCoins.map((coins)=>{\r\n                    return(\r\n                        <Coin\r\n                         id={coins.id}\r\n                         icon={coins.image}\r\n                         coinName={coins.name}\r\n                         coinSymbol={coins.symbol}\r\n                         price={coins.current_price}\r\n                         marketCap={coins.market_cap}\r\n                         priceChange={coins.price_change_percentage_24h}\r\n                        >\r\n\r\n                        </Coin>\r\n                    );\r\n                })}\r\n             </div>\r\n        </div> \r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\Html\\crypto\\src\\Routes\\CoinPage.js",["29"],"import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport \"../Routes/Styles/CoinPage.css\";\r\n\r\nimport Backgrounding from \"../Images/cryptobckg.jpeg\"\r\n\r\n\r\nfunction CoinPage(){\r\n    let {id}=useParams();\r\n    const [coin,setCoin]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        console.log(id);\r\n        Axios.get(`https://api.coingecko.com/api/v3/coins/${id}`).then\r\n        (\r\n            (response)=>{\r\n             console.log(response.data);\r\n             setCoin(response.data);\r\n            }\r\n        );\r\n    },[]);\r\n  \r\n\r\n    if(coin){\r\n        return(\r\n            <div className=\"coin-Container\"\r\n            style={\r\n                {\r\n        backgroundImage: `url(${Backgrounding})`,\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n                }\r\n            }>\r\n             <div className=\"coinPage-Icon\">\r\n             <h1>{coin.name}</h1>\r\n          <img src={coin.image.large} alt=\"Icon\" className=\"coinPage-Icon\" />\r\n          <div className=\"coinPage-Data\">\r\n            <div className=\"coinPage-Row\">\r\n              <h3 className=\"coinPage-RowHeader\">Symbol:</h3>\r\n              <h3 className=\"coinPage-RowData\">{coin.symbol}</h3>\r\n            </div>\r\n            <div className=\"coinPage-Row\">\r\n              <h3 className=\"coinPage-RowHeader\">Current Price:</h3>\r\n              <h3 className=\"coinPage-RowData\">\r\n                $ {coin.market_data.current_price.usd.toLocaleString()}\r\n              </h3>\r\n            </div>\r\n            <div className=\"coinPage-Row\">\r\n              <h3 className=\"coinPage-RowHeader\">Market Cap:</h3>\r\n              <h3 className=\"coinPage-RowData\">\r\n                $ {coin.market_data.market_cap.usd.toLocaleString()}\r\n              </h3>\r\n            </div>\r\n            <div className=\"coinPage-Row\">\r\n              <h3 className=\"coinPage-RowHeader\">Total Volume:</h3>\r\n              <h3 className=\"coinPage-RowData\">\r\n                $ {coin.market_data.total_volume.usd.toLocaleString()}\r\n              </h3>\r\n            </div>\r\n            <div className=\"coinPage-Row\">\r\n              <h3 className=\"coinPage-RowHeader\">24hr High:</h3>\r\n              <h3 className=\"coinPage-RowData green\">\r\n                $ {coin.market_data.high_24h.usd.toLocaleString()}\r\n              </h3>\r\n            </div>\r\n            <div className=\"coinPage-Row\">\r\n              <h3 className=\"coinPage-RowHeader\">24hr Low:</h3>\r\n              <h3 className=\"coinPage-RowData red\">\r\n                $ {coin.market_data.low_24h.usd.toLocaleString()}\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <Link to=\"/\">\r\n            <div className=\"coinPage-RouteButton\">Go back</div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default CoinPage;","C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\Html\\crypto\\src\\Components\\Coin.js",["30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":15,"column":42,"nodeType":"37","messageId":"38","endLine":15,"endColumn":44},{"ruleId":"39","severity":1,"message":"40","line":42,"column":15,"nodeType":"41","endLine":43,"endColumn":29},{"ruleId":"42","severity":1,"message":"43","line":23,"column":7,"nodeType":"44","endLine":23,"endColumn":9,"suggestions":"45"},{"ruleId":"39","severity":1,"message":"40","line":23,"column":11,"nodeType":"41","endLine":23,"endColumn":29},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["48"],"no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [id]",{"range":"51","text":"52"},[620,622],"[id]"]