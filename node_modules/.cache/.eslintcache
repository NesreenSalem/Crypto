[{"C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\crypto-app-master\\crypto-app-master\\src\\index.js":"1","C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\crypto-app-master\\crypto-app-master\\src\\App.js":"2","C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\crypto-app-master\\crypto-app-master\\src\\Routes\\Home.js":"3","C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\crypto-app-master\\crypto-app-master\\src\\Routes\\CoinPage.js":"4","C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\crypto-app-master\\crypto-app-master\\src\\Components\\Coin.js":"5"},{"size":197,"mtime":1625162266000,"results":"6","hashOfConfig":"7"},{"size":462,"mtime":1625162266000,"results":"8","hashOfConfig":"7"},{"size":2224,"mtime":1625162266000,"results":"9","hashOfConfig":"7"},{"size":3123,"mtime":1625162266000,"results":"10","hashOfConfig":"7"},{"size":1141,"mtime":1625162266000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ysyt2c",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\crypto-app-master\\crypto-app-master\\src\\index.js",[],"C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\crypto-app-master\\crypto-app-master\\src\\App.js",["26"],"import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Home from \"./Routes/Home\";\nimport CoinPage from \"./Routes/CoinPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path=\"/\" exact render={(props) => <Home />} />\n        <Route path=\"/CoinPage/:id\" exact render={(props) => <CoinPage />} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\crypto-app-master\\crypto-app-master\\src\\Routes\\Home.js",["27"],"import \"../App.css\";\nimport Axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Coin from \"../Components/Coin\";\nimport Refresh from \"../Images/refresh.png\";\n\nfunction Home() {\n  const [coins, setCoins] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    refreshPage();\n  }, []);\n\n  const filterCoins = coins.filter((coin) =>\n    coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const refreshPage = () => {\n    setIsLoading(true);\n    Axios.get(\n      \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\n    ).then((response) => {\n      console.log(response.data);\n      setIsLoading(false);\n      setCoins(response.data);\n    });\n  };\n\n  // const getCoins = () => {\n  //   Axios.get(\n  //     \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\n  //   ).then((response) => {\n  //     console.log(response);\n  //     setCoins(response.data);\n  //   });\n  // };\n\n  // <Route exact path=\"/coin/:id\"\n\n  // history.push(\"/coin/${id}\")\n  return (\n    <div className=\"App\">\n      <div className=\"headerContainer\">\n        <h1>Welcome to the CryptoChecker</h1>\n        <div className=\"buttonContainer\">\n          <input\n            placeholder=\"Search for a Coin\"\n            type=\"text\"\n            onChange={handleSearch}\n          />\n          <img onClick={refreshPage} src={Refresh}></img>\n        </div>\n      </div>\n      <div className=\"coinContainer\">\n        {isLoading && <h1 className=\"loadingMssg\">Data Loading...</h1>}\n        {filterCoins.map((coins) => {\n          return (\n            <Coin\n              id={coins.id}\n              icon={coins.image}\n              coinName={coins.name}\n              coinSymbol={coins.symbol}\n              price={coins.current_price}\n              marketCap={coins.market_cap}\n              priceChange={coins.price_change_percentage_24h}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\crypto-app-master\\crypto-app-master\\src\\Routes\\CoinPage.js",["28"],"import React from \"react\";\nimport Axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport \"../Routes/Styles/CoinPage.css\";\nimport BackgroundImg from \"../Images/cryptobckg.jpeg\";\n\nfunction CoinPage() {\n  let { id } = useParams();\n  const [coin, setCoin] = useState(null);\n  // coin start has to be null first to give time to fetch API data\n\n  useEffect(() => {\n    console.log(id);\n    Axios.get(`https://api.coingecko.com/api/v3/coins/${id}`).then(\n      (response) => {\n        console.log(response.data);\n        setCoin(response.data);\n      }\n    );\n  }, []);\n\n  // if statement to check if data has reached, only then render the component\n  if (coin) {\n    return (\n      <div\n        className=\"coinPage-Container\"\n        style={{\n          backgroundImage: `url(${BackgroundImg})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n        }}\n      >\n        <div className=\"coinPage-Info\">\n          <h1>{coin.name}</h1>\n          <img src={coin.image.large} alt=\"Icon\" className=\"coinPage-Icon\" />\n          <div className=\"coinPage-Data\">\n            <div className=\"coinPage-Row\">\n              <h3 className=\"coinPage-RowHeader\">Symbol:</h3>\n              <h3 className=\"coinPage-RowData\">{coin.symbol}</h3>\n            </div>\n            <div className=\"coinPage-Row\">\n              <h3 className=\"coinPage-RowHeader\">Current Price:</h3>\n              <h3 className=\"coinPage-RowData\">\n                $ {coin.market_data.current_price.usd.toLocaleString()}\n              </h3>\n            </div>\n            <div className=\"coinPage-Row\">\n              <h3 className=\"coinPage-RowHeader\">Market Cap:</h3>\n              <h3 className=\"coinPage-RowData\">\n                $ {coin.market_data.market_cap.usd.toLocaleString()}\n              </h3>\n            </div>\n            <div className=\"coinPage-Row\">\n              <h3 className=\"coinPage-RowHeader\">Total Volume:</h3>\n              <h3 className=\"coinPage-RowData\">\n                $ {coin.market_data.total_volume.usd.toLocaleString()}\n              </h3>\n            </div>\n            <div className=\"coinPage-Row\">\n              <h3 className=\"coinPage-RowHeader\">24hr High:</h3>\n              <h3 className=\"coinPage-RowData green\">\n                $ {coin.market_data.high_24h.usd.toLocaleString()}\n              </h3>\n            </div>\n            <div className=\"coinPage-Row\">\n              <h3 className=\"coinPage-RowHeader\">24hr Low:</h3>\n              <h3 className=\"coinPage-RowData red\">\n                $ {coin.market_data.low_24h.usd.toLocaleString()}\n              </h3>\n            </div>\n          </div>\n          <Link to=\"/\">\n            <div className=\"coinPage-RouteButton\">Go back</div>\n          </Link>\n\n          {/* coinName={coins.name}\n              coinSymbol={coins.symbol}\n              price={coins.current_price}\n              marketCap={coins.market_cap}\n              priceChange={ */}\n        </div>\n      </div>\n    );\n  } else {\n    return null; // if API data not fetched, return null\n  }\n}\n\nexport default CoinPage;\n","C:\\Users\\ElDamalwy\\OneDrive\\Desktop\\Front-web\\crypto-app-master\\crypto-app-master\\src\\Components\\Coin.js",["29"],"import React from \"react\";\nimport \"../Components/Coin.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Coin = ({\n  icon,\n  coinName,\n  coinSymbol,\n  price,\n  marketCap,\n  priceChange,\n  id,\n}) => {\n  let history = useHistory();\n  return (\n    <div className=\"coinContainer\">\n      <div className=\"coinRow\">\n        <div className=\"coinData\">\n          <div className=\"coin\">\n            <img src={icon} />\n            <h1 className=\"coinName\">{coinName}</h1>\n            <p className=\"coinSymbol\">{coinSymbol}</p>\n            <p className=\"coinPrice\">$ {price.toFixed(2)}</p>\n            {priceChange < 0 ? (\n              <p className=\"priceChange red\">{priceChange.toFixed(2)}%</p>\n            ) : (\n              <p className=\"priceChange green\">{priceChange.toFixed(2)}%</p>\n            )}\n            <p className=\"coinVolume\">$ {marketCap.toLocaleString()}</p>\n            <button\n              onClick={() => {\n                history.push(`/CoinPage/${id}`);\n              }}\n            >\n              More Info\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Coin;\n",{"ruleId":"30","severity":1,"message":"31","line":3,"column":42,"nodeType":"32","messageId":"33","endLine":3,"endColumn":46},{"ruleId":"34","severity":1,"message":"35","line":57,"column":11,"nodeType":"36","endLine":57,"endColumn":52},{"ruleId":"37","severity":1,"message":"38","line":21,"column":6,"nodeType":"39","endLine":21,"endColumn":8,"suggestions":"40"},{"ruleId":"34","severity":1,"message":"35","line":20,"column":13,"nodeType":"36","endLine":20,"endColumn":31},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["41"],{"desc":"42","fix":"43"},"Update the dependencies array to be: [id]",{"range":"44","text":"45"},[627,629],"[id]"]